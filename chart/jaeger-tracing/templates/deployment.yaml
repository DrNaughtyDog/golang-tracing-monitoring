{{ range $k, $v := .Values.services }}
{{ with $v }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $k }}
  labels: &labels
    app.kubernetes.io/name: {{ $k }}
    app.kubernetes.io/instance: {{ $k }}-{{ $.Release.Name }}
    app.kubernetes.io/version: {{ $.Chart.Version }}
    app.kubernetes.io/component: {{ .type | default "passthrough" }}
    app.kubernetes.io/part-of: {{ $.Chart.Name }}
    app.kubernetes.io/managed-by: helm
spec:
  {{- if not (.autoscaling) }}
  replicas: {{ .replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      {{- with .podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        <<: *labels
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $k }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ (.container).port | default 8080 }}
              protocol: TCP
            - name: metrics
              containerPort: {{ (.container).metricsport | default 2112 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 1
          args:
              [
               "--jaeger-collector-endpoint={{$.Values.jaegerCollectorEndpoint}}",
               "--debug={{$.Values.debug}}",
              ]
          resources:
            {{- toYaml .resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: /config.yaml
            subPath: config.yaml
      volumes:
      - name: config
        configMap:
          name: {{ $k }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
{{ end }}
